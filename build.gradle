plugins {
    id "com.github.hierynomus.license" version "0.15.0" apply true
    id 'org.springframework.boot' version '2.3.4.RELEASE'
}

ext {
    configuration = [
            JAVA_VERSION = JavaVersion.VERSION_1_8
    ]
    libraries = [
            junitV = "5.4.2",
            fastjsonV = "1.2.72",
            slf4jV = "1.7.30",
            log4j2V = "2.13.1",
            disruptorV = "3.4.4",
            mybatisV = "3.5.7",
            mybatisSpringV = "2.0.5"
    ]
    libs = [
            "junit-jupiter"     : "org.junit.jupiter:junit-jupiter:${junitV}",
            "slf4j"             : "org.slf4j:slf4j-api:${slf4jV}",
            "slf4j-simple"      : "org.slf4j:slf4j-simple:${slf4jV}",
            "log4j2"            : "org.apache.logging.log4j:log4j-api:${log4j2V}",
            "log4j2-core"       : "org.apache.logging.log4j:log4j-core:${log4j2V}",
            "log4j2-slf4j-impl" : "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2V}",
            "disruptor"         : "com.lmax:disruptor:${disruptorV}",
            "fastjson"          : "com.alibaba:fastjson:${fastjsonV}",
            "mybatis"           : "org.mybatis:mybatis:${mybatisV}",
            "mybatis-spring"    : "org.mybatis:mybatis-spring:${mybatisSpringV}",
            "mybatis-thymeleaf" : "org.mybatis.scripting:mybatis-thymeleaf:1.0.2",
            "mybatis-freemarker": "org.mybatis.scripting:mybatis-freemarker:1.2.2",
            "mybatis-velocity"  : "org.mybatis.scripting:mybatis-velocity:2.1.0",
    ]
}

allprojects {
    group 'io.github.wvkity'
    version '1.0.0-SNAPSHOT'
    apply from: rootDir.canonicalPath + '/.gradle/publish.gradle'
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    sourceCompatibility = "${JAVA_VERSION}"
    targetCompatibility = "${JAVA_VERSION}"

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://jcenter.bintray.com/' }
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.deprecation = true
        options.compilerArgs += ["-parameters"]
    }

    /*sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }*/

    test {
        //dependsOn("cleanTest", "generatePomFileForMavenJavaPublication")
        useJUnitPlatform()
    }

    task mkdir {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }

    dependencies {
        implementation fileTree(dir: "libs", include: ["*.jar"])
        runtimeOnly "${libs.slf4j}"
        compileOnly "${libs.slf4j}"
        testImplementation "${libs.slf4j}"
        testImplementation "${libs["slf4j-simple"]}"
        testImplementation "${libs["junit-jupiter"]}"
        testAnnotationProcessor "${libs["junit-jupiter"]}"
        testImplementation "${libs.fastjson}"
    }
}
